@page "/OpenCity/{id:int}"
@using Domain.Models
@using HttpClients.ClientInterfaces
@using SEP3lu
@inject IRestaurantService RestaurantService
@inject IHotelService HotelService
@inject IParkService ParkService
@inject ICityService cityService
@inject IMuseumService MuseumService 
@inject NavigationManager NavMgr

<h3>OpenCity @id</h3>
<h3>@title</h3>
<h3>@desc</h3>
<img src=@imsrc/>

<div @onclick="@((() => NavMgr.NavigateTo($"/OpenCityRestaurants/{id}")))">
    Restaurants
</div>
<div @onclick="@((() => NavMgr.NavigateTo($"/OpenCityHotels/{id}")))">
    Hotels
</div>

<div @onclick="@((() => NavMgr.NavigateTo($"/OpenCityParks/{id}")))">
    Parks
</div>

<div @onclick="@((() => NavMgr.NavigateTo($"/OpenCityMuseums/{id}")))">
    Museums
</div>

@code {

    [Parameter]
    public int id { get; set; }

    private IEnumerable<City> cities;
    private IEnumerable<Restaurant> restaurants;
    private IEnumerable<Hotel> hotels;
    private IEnumerable<Museum> museums;
    private IEnumerable<Park> parks;
    private City theCity;

    private string title;
    private string desc;
    private string imsrc;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            cities = await cityService.getCities("getall");
            restaurants = await RestaurantService.getRestaurants(id);
            hotels = await HotelService.getHotels(id);
            museums = await MuseumService.getMuseums(id);
            parks = await ParkService.getParks(id);
            theCity = cities.FirstOrDefault(city => city.Id == id);

            title = theCity.Name;
            desc = theCity.Description;
            imsrc = theCity.ImageURL;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }




}