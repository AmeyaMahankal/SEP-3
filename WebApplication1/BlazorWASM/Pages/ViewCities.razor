@page "/"
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject NavigationManager NavMgr
@inject ICityService cityService

<h3><b>Explore the world</b></h3>
<AuthorizeView>
    <Authorized>
        <p>Hello @context.User.Claims.First(claim => claim.Type.Equals("Username")).Value</p>
    </Authorized>
    <NotAuthorized>
        <p>Welcome </p>
        <p>Be sure to create an account or log-in as you can only view for now</p>
    </NotAuthorized>
</AuthorizeView>
<div class="form-group field">
        <label>Search for a city:</label>
        <input type="text" @bind="searchCity" @bind:event="oninput"/>
        <button @onclick="Search" disabled="@(string.IsNullOrEmpty(searchCity))" class="acceptbtn">Search</button>
    </div>
@if (cities == null)
{
    <span>Loading..</span>
}
else if (!cities.Any())
{
    <span>No cities found</span>
}
else
{
    <div>
        @foreach (City city in cities)
        {
            <div class="container" @onclick="@((() => NavMgr.NavigateTo($"/OpenCity/{city.Id}")))" >
                <img src=@city.ImageURL height=80% width=80%/>
                <div class="centered">@city.Name</div>
            </div>
            <br/>
        }
                
    </div>
}
@code {
    private IEnumerable<City> cities;
    private string msg = "";

    private string searchCity;
    

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            cities = await cityService.getCities("getall");
            int stpher = 0;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async Task Search()
    {
        cities = await cityService.getCities(searchCity);
    }
    
    
}

<style>
.container {
  position: relative;
  text-align: center;
  color: white;
}

.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 20px;
  color: white;
  
  background-color: black;
  display: inline;
  padding: 0.5rem;
    
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
  
  opacity: 0.8;
}



</style>