@page "/OpenCityRestaurants/{cityid:int}"
@using SEP3lu
@using HttpClients.ClientInterfaces
@inject IRestaurantService RestaurantService
@inject NavigationManager NavMgr
<h3>Restaurants</h3>
<button @onclick="@((() => NavMgr.NavigateTo($"/OpenCity/{cityid}")))" class="acceptbtn">Go back</button>
@if (restaurants == null)
{
    <span>Loading..</span>
}
else if (!restaurants.Any())
{
    <span>No Restaurants found</span>
}
else
{
    <div>
        @foreach (Restaurant restaurant in restaurants)
        {
            <div class="container" @onclick="@((() => NavMgr.NavigateTo($"/OpenRestaurant/{cityid}/{restaurant.Id}")))">
                <img src=@restaurant.ImageURL height=80% width=80%/>
                <div class="centered">@restaurant.Name</div>
            </div>
        }
        <AuthorizeView Policy="MustBeAdmin">
        <div class="user-card" @onclick="@((() => NavMgr.NavigateTo($"/CreateRestaurant/{cityid}")))">
            <label>Create Restaurant</label>
        </div>
        </AuthorizeView>
    </div>
}

@code {
    [Parameter]
    public int cityid { get; set; }
    
    private IEnumerable<Restaurant> restaurants;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {

            restaurants = await RestaurantService.getRestaurants(cityid);

        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
    
}
<style>
.container {
  position: relative;
  text-align: center;
  color: white;
}

.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 20px;
  color: white;
  
  background-color: black;
  display: inline;
  padding: 0.5rem;
    
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
  
  opacity: 0.8;
}



</style>