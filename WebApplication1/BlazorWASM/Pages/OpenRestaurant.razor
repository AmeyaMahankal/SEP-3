@page "/OpenRestaurant/{cityid:int}/{id:int}"
@using Domain.Models
@using HttpClients.ClientInterfaces
@using SEP3lu
@using System.Security.Claims
@inject IRestaurantsReviewService RestaurantsReviewService;
<h3>OpenRestaurant city id @cityid restaurant @id  @selectedUserId</h3>



@if (reviews == null)
{
    <span>Loading..</span>
}
else if (!reviews.Any())
{
    <span>No reviews found</span>
}
else
{
    <div class="users-container">
        @foreach (Review review in reviews)
        {
            <div class="user-card">
                <p>@review.Comment</p>
                <p>@review.StarReview</p>
            </div>
        }
    </div>
}


@code {
    [Parameter]
    public int cityid { get; set; }
    [Parameter]
    public int id { get; set; }
    private IEnumerable<Review> reviews;
    private IEnumerable<Restaurant> restaurants; 
    private Review theReview;

    private string comment;
    private int starreview;
    
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;
    
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;
    
    private string stringselectedUserId;
    private int? selectedUserId;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            reviews = await RestaurantsReviewService.getRestaurantsReviews(id);
            /*
            theReview = reviews.FirstOrDefault(review => review.CategoryId == id);
            comment = theReview.Comment;
            starreview = theReview.StarReview;
            */
            AuthenticationState authState = await AuthState;
            ClaimsPrincipal user = authState.User;
            isLoggedIn = user.Identity != null;
        
            if (!isLoggedIn) return;
        
            userClaims = user.Claims;
        
            stringselectedUserId = user.Claims.First(claim => claim.Type.Equals("Id")).ToString();

            string stringid="";
            foreach (char VARIABLE in stringselectedUserId)
            {
                if (Char.IsDigit(VARIABLE))
                {
                    stringid = stringid + VARIABLE;
                }
            }

            selectedUserId = Convert.ToInt32(stringid);
           
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    
    
    
    
}