syntax="proto3";

option java_package="com.sdj3.protobuf";
option csharp_namespace = "DataAccessClient";

service Access{
  rpc CreateUser(UserCreate) returns (UserCreateResponse);
  rpc GetByUsername(UserGetUsername) returns (User);
  rpc GetById(UserGetId) returns (User);
  rpc GetUsersContaining(SearchUserParameters) returns (listOfUsers);

  //city
  rpc CreateCity(CityToCreate) returns (CityCreated);
  rpc GetCitByyname(CityByName) returns (City);
  rpc GetCityById(CityById) returns (City);
  rpc GetCities(CityByName) returns (listofcity);




  //hotel

  rpc CreateHotel(CategoryToCreate ) returns (CategoryCreated);
  rpc GetHotelById(CategoryById) returns(Category);
  rpc UpdateHotelName(CategoryNameToUpdate) returns(CategoryNameUpdated);
  rpc UpdateHotelDescription(CategoryDescriptionToUpdate) returns(CategoryDescriptionUpdated);
  rpc DeleteHotel(CategoryToDelete) returns(CategoryDeleted);
  rpc GetListOfHotels(CitysIdForCategoryList) returns(ListOfACategory);

  //hotels review

  rpc CreateHotelsReview(ReviewToCreate) returns (ReviewCreated);
  rpc GetHotelsReviewById(ReviewById) returns(Review);
  rpc UpdateHotelsReviewComment(ReviewsCommentToUpdate) returns(ReviewCommentUpdated);
  rpc UpdateHotelsStarReview(ReviewStarReviewToUpdate) returns(ReviewsStarReviewUpdated);
  rpc DeleteHotelReview(ReviewToDelete) returns(ReviewDeleted);
  rpc GetHotelReviewsContaining(SearchReviewPeremetars) returns (ReveiewList);

  //museum

  rpc CreateMuseum(CategoryToCreate) returns (CategoryCreated);
  rpc GetMuseumById(CategoryById) returns(Category);
  rpc UpdateMuseumName(CategoryNameToUpdate) returns(CategoryNameUpdated);
  rpc UpdateMuseumDescription(CategoryDescriptionToUpdate) returns(CategoryDescriptionUpdated);
  rpc DeleteMuseum(CategoryToDelete) returns(CategoryDeleted);
  rpc GetListOfMuseums(CitysIdForCategoryList) returns(ListOfACategory);

  //museums review

  rpc CreateMuseumsReview(ReviewToCreate) returns (ReviewCreated);
  rpc GetMuseumsReviewById(ReviewById) returns(Review);
  rpc UpdateMuseumsReviewComment(ReviewsCommentToUpdate) returns(ReviewCommentUpdated);
  rpc UpdateMuseumsStarReview(ReviewStarReviewToUpdate) returns(ReviewsStarReviewUpdated);
  rpc DeleteMuseumsReview(ReviewToDelete) returns(ReviewDeleted);
  rpc GetMuseumsReviewsContaining(SearchReviewPeremetars) returns (ReveiewList);

  //park

  rpc CreatePark(CategoryToCreate) returns (CategoryCreated);
  rpc GetParkById(CategoryById) returns(Category);
  rpc UpdateParkName(CategoryNameToUpdate) returns(CategoryNameUpdated);
  rpc UpdateParkDescription(CategoryDescriptionToUpdate) returns(CategoryDescriptionUpdated);
  rpc DeletePark(CategoryToDelete) returns(CategoryDeleted);
  rpc GetListOfParks(CitysIdForCategoryList) returns(ListOfACategory);

  //parks review

  rpc CreateParksReview(ReviewToCreate) returns (ReviewCreated);
  rpc GetParksReviewById(ReviewById) returns(Review);
  rpc UpdateParksReviewComment(ReviewsCommentToUpdate) returns(ReviewCommentUpdated);
  rpc UpdateParksStarReview(ReviewStarReviewToUpdate) returns(ReviewsStarReviewUpdated);
  rpc DeleteParksReview(ReviewToDelete) returns(ReviewDeleted);
  rpc GetParksReviewsContaining(SearchReviewPeremetars) returns (ReveiewList);

  //restaurant

  rpc CreateRestaurant(CategoryToCreate) returns (CategoryCreated);
  rpc GetRestaurantById(CategoryById) returns(Category);
  rpc UpdateRestaurantName(CategoryNameToUpdate) returns(CategoryNameUpdated);
  rpc UpdateRestaurantDescription(CategoryDescriptionToUpdate) returns(CategoryDescriptionUpdated);
  rpc DeleteRestaurant(CategoryToDelete) returns(CategoryDeleted);
  rpc GetListOfRestaurant(CitysIdForCategoryList) returns(ListOfACategory);


  //restaurants review

  rpc CreateRestaurantsReview(ReviewToCreate) returns (ReviewCreated);
  rpc GetRestaurantsReviewById(ReviewById) returns(Review);
  rpc UpdateRestaurantsReviewComment(ReviewsCommentToUpdate) returns(ReviewCommentUpdated);
  rpc UpdateRestaurantsStarReview(ReviewStarReviewToUpdate) returns(ReviewsStarReviewUpdated);
  rpc DeleteRestaurantsReview(ReviewToDelete) returns(ReviewDeleted);
  rpc GetRestaurantsReviewsContaining(SearchReviewPeremetars) returns (ReveiewList);
  
  //report

  rpc CreateReport(ReportToCreate) returns (ReportCreated);
  rpc GetReportById(ReportById) returns(Report);
  rpc DeleteReport(ReportToDelete) returns(ReportDeleted);
  rpc GetListOfReports(Empty) returns(ListOfReports);
}
message User{
  int32 id = 1;
  string username = 2;
  string password = 3;
  string role = 4;
}

message SearchUserParameters{
  string usercontains = 1;
}

message listOfUsers{
  repeated User users = 1;
}

message UserGetUsername{
  string username = 1;
}

message UserGetId{
  int32 id = 1;
}

message UserCreate{
  string userName = 1;
  string PassWord = 2;
}

message UserCreateResponse{
  int32 code = 1;
  string userName = 2;
}




//City



message City{
  int32 id = 1;
  string name = 2;
  string description = 3;
  string imageurl = 4;
}

message listofcity{
  repeated City cities=1;
}


message CityToCreate{
  string name = 1;
  string description = 2;
  string imageurl = 3;
}

message CityCreated{
  int32 code = 1;
  string name = 2;

}

message CityByName{
  string cityname = 1;
}

message CityById{
  int32 cityid = 1;
}




//Category

message CategoryToCreate{
  string name = 1;
  string description = 2;
  string imageurl = 3;
  int32 cityid = 4;
}


message CategoryCreated{
  int32 code = 1;
  string name = 2;
}

message CategoryById{
  int32 categoryid = 1;
}

message CategoryNameToUpdate{
  int32 categoryid = 1;
  string name = 2;
}


message CategoryDescriptionToUpdate{
  int32 categoryid = 1;
  string description = 2;
}

message CategoryToDelete{
  int32 categoryid = 1;
}

message CategoryNameUpdated{
  int32 code = 1;
  string name = 2;
}

message CategoryDescriptionUpdated{
  int32 code = 1;
  string description = 2;
}

message CategoryDeleted{
  int32 code = 1;
}

message CitysIdForCategoryList{
  int32 cityid = 1;
}

message Category{
  int32 id = 1;
  string name = 2;
  string description = 3;
  string imageurl = 4;
  int32 cityid = 5;
}

message ListOfACategory{
  repeated Category categories = 1;
}

//Review

message Review{
  int32 id = 1;
  string comment = 2;
  int32 starreview = 3;
  int32 userid = 4;
  int32 categoryid = 5;
}

message ReviewToCreate{
  string comment = 1;
  int32 starreview = 2;
  int32 userid = 3;
  int32 categoryid = 4;
}

message ReviewCreated{
  int32 code = 1;
  string comment = 2;
  int32 starreview = 3;
}

message SearchReviewPeremetars{
  int32 categoryid = 1;
}

message ReviewById{
  int32 id = 1;
}

message ReviewsCommentToUpdate{
  int32 id = 1;
  string comment = 2;
}

message ReviewCommentUpdated{
  int32 code = 1;
  string comment = 2;
}

message ReviewStarReviewToUpdate{
  int32 id = 1;
  int32 starreview = 2;
}
message ReviewsStarReviewUpdated{
  int32 code = 1;
  int32 starreview = 2;
}

message ReviewToDelete{
  int32 id = 1;
}

message ReviewDeleted{
  int32 code = 1;
}


message ReveiewList{
  repeated Review reviews = 1;
}
//Report

message Report{
  int32 id = 1;
  int32 userid = 2;
  string description = 3;
  int32 reviewid = 4;
}

message ReportToCreate{
  int32 userid = 1;
  string description = 2;
  int32 reviewid = 3;
}


message ReportCreated{
  int32 code = 1;
  string description = 2;

}

message ReportById{
  int32 reportid = 1;
}

message ReportToDelete{
  int32 reportid = 1;
}




message ReportDeleted{

  int32 code = 1;

}




message ListOfReports{
  repeated Report report = 1;
}

message Empty {
  string empty=1;

}
